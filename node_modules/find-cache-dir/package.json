{
  "_args": [
    [
      {
        "raw": "find-cache-dir@^2.0.0",
        "scope": null,
        "escapedName": "find-cache-dir",
        "name": "find-cache-dir",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/yangdonglin/github/canvas-seal/node_modules/terser-webpack-plugin"
    ]
  ],
  "_cnpm_publish_time": 1529330300824,
  "_from": "find-cache-dir@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "find-cache-dir@2.0.0",
  "_location": "/find-cache-dir",
  "_nodeVersion": "8.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/find-cache-dir_2.0.0_1529330300742_0.22473544916525712"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find-cache-dir@^2.0.0",
    "scope": null,
    "escapedName": "find-cache-dir",
    "name": "find-cache-dir",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/terser-webpack-plugin"
  ],
  "_resolved": "http://registry.npm.taobao.org/find-cache-dir/download/find-cache-dir-2.0.0.tgz",
  "_shasum": "4c1faed59f45184530fb9d7fa123a4d04a98472d",
  "_shrinkwrap": null,
  "_spec": "find-cache-dir@^2.0.0",
  "_where": "/Users/yangdonglin/github/canvas-seal/node_modules/terser-webpack-plugin",
  "bugs": {
    "url": "https://github.com/avajs/find-cache-dir/issues"
  },
  "dependencies": {
    "commondir": "^1.0.1",
    "make-dir": "^1.0.0",
    "pkg-dir": "^3.0.0"
  },
  "description": "Finds the common standard cache directory",
  "devDependencies": {
    "ava": "^0.25.0",
    "coveralls": "^3.0.1",
    "del": "^3.0.0",
    "nyc": "^12.0.2",
    "xo": "^0.21.1"
  },
  "directories": {},
  "dist": {
    "shasum": "4c1faed59f45184530fb9d7fa123a4d04a98472d",
    "size": 2534,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/find-cache-dir/download/find-cache-dir-2.0.0.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "b50ee756ba4a40b084521619b50a764cb823ad43",
  "homepage": "https://github.com/avajs/find-cache-dir#readme",
  "keywords": [
    "cache",
    "directory",
    "dir",
    "caching",
    "find",
    "search"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jamestalmage",
      "email": "james@talmage.io"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "find-cache-dir",
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ]
  },
  "optionalDependencies": {},
  "publish_time": 1529330300824,
  "readme": "# find-cache-dir [![Build Status](https://travis-ci.org/avajs/find-cache-dir.svg?branch=master)](https://travis-ci.org/avajs/find-cache-dir) [![Coverage Status](https://coveralls.io/repos/github/avajs/find-cache-dir/badge.svg?branch=master)](https://coveralls.io/github/avajs/find-cache-dir?branch=master)\n\n> Finds the common standard cache directory\n\nRecently the [`nyc`](https://github.com/bcoe/nyc) and [`AVA`](https://ava.li) projects decided to standardize on a common directory structure for storing cache information:\n\n```sh\n# nyc\n./node_modules/.cache/nyc\n\n# ava\n./node_modules/.cache/ava\n\n# your-module\n./node_modules/.cache/your-module\n```\n\nThis module makes it easy to correctly locate the cache directory according to this shared spec. If this pattern becomes ubiquitous, clearing the cache for multiple dependencies becomes easy and consistent:\n\n```\nrm -rf ./node_modules/.cache\n```\n\nIf you decide to adopt this pattern, please file a PR adding your name to the list of adopters below.\n\n\n## Install\n\n```\n$ npm install find-cache-dir\n```\n\n\n## Usage\n\n```js\nconst findCacheDir = require('find-cache-dir');\n\nfindCacheDir({name: 'unicorns'});\n//=> '/user/path/node-modules/.cache/unicorns'\n```\n\n\n## API\n\n### findCacheDir([options])\n\nFinds the cache directory using the supplied options. The algorithm tries to find a `package.json` file, searching every parent directory of the `cwd` specified (or implied from other options). It returns a `string` containing the absolute path to the cache directory, or `null` if `package.json` was never found.\n\n#### options\n\nType: `Object`\n\n##### name\n\n*Required*<br>\nType: `string`\n\nShould be the same as your project name in `package.json`.\n\n##### files\n\nType: `Array` `string`\n\nAn array of files that will be searched for a common parent directory. This common parent directory will be used in lieu of the `cwd` option below.\n\n##### cwd\n\nType: `string`<br>\nDefault `process.cwd()`\n\nDirectory to start searching for a `package.json` from.\n\n##### create\n\nType: `boolean`<br>\nDefault `false`\n\nIf `true`, the directory will be created synchronously before returning.\n\n##### thunk\n\nType: `boolean`<br>\nDefault `false`\n\nIf `true`, this modifies the return type to be a function that is a thunk for `path.join(theFoundCacheDirectory)`.\n\n```js\nconst thunk = findCacheDir({name: 'foo', thunk: true});\n\nthunk();\n//=> '/some/path/node_modules/.cache/foo'\n\nthunk('bar.js')\n//=> '/some/path/node_modules/.cache/foo/bar.js'\n\nthunk('baz', 'quz.js')\n//=> '/some/path/node_modules/.cache/foo/baz/quz.js'\n```\n\nThis is helpful for actually putting actual files in the cache!\n\n\n## Adopters\n\n- [`AVA`](https://ava.li)\n- [`nyc`](https://github.com/bcoe/nyc)\n- [`babel-loader`](https://github.com/babel/babel-loader)\n- [`eslint-loader`](https://github.com/MoOx/eslint-loader)\n- [`Phenomic`](https://phenomic.io)\n- [`javascripthon-loader`](https://github.com/Beg-in/javascripthon-loader)\n\n\n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/avajs/find-cache-dir.git"
  },
  "scripts": {
    "test": "xo && nyc ava"
  },
  "version": "2.0.0"
}
